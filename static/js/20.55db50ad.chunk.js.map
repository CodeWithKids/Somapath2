{"version":3,"sources":["../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getDialogTitleUtilityClass","slot","generateUtilityClass","dialogTitleClasses","generateUtilityClasses","getDialogActionsUtilityClass","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","justifyContent","flex","marginLeft","DialogActions","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogContentUtilityClass","DialogContentRoot","dividers","theme","WebkitOverflowScrolling","overflowY","borderTop","vars","palette","divider","borderBottom","paddingTop","DialogContent","DialogTitleRoot","Typography","DialogTitle","idProp","id","DialogContext","titleId","component","variant","options","ConfirmationDialogRaw","onClose","valueProp","open","useState","setValue","radioGroupRef","useRef","useEffect","Dialog","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","RadioGroup","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","Button","color","onClick","DialogRoot","width","backgroundColor","background","paper","maxHeight","ConfirmationDialog","setOpen","List","role","ListItem","button","disabled","ListItemText","primary","secondary","keepMounted","MuiDialogTitle","margin","position","right","top","grey","children","disableTypography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","handleClose","gutterBottom","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","FormDialog","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","Divider","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","flexShrink","ListItemAvatar","context","ListContext","emails","SimpleDialog","selectedValue","handleListItemClick","email","Avatar","blue","SimpleDialogDemo","setSelectedValue","Container","marginBottom","AppDialog","Box","routeSegments","path","Stack","title","CustomizedDialog"],"mappings":"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","file":"static/js/20.55db50ad.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const radioGroupRef = useRef(null);\n\n  useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  const handleCancel = () => onClose();\n  const handleOk = () => onClose(value);\n\n  const handleChange = (_, newValue) => setValue(newValue);\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      disableEscapeKeyDown\n      TransitionProps={{ onExiting: handleEntering }}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  width: '100%',\n  maxWidth: 360,\n  backgroundColor: theme.palette.background.paper,\n  '& .paper': { width: '80%', maxHeight: 435 },\n}));\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <DialogRoot>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n\n        <ListItem\n          button\n          divider\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n\n        <ConfirmationDialogRaw\n          keepMounted\n          open={open}\n          value={value}\n          className=\"paper\"\n          id=\"ringtone-menu\"\n          onClose={handleClose}\n        />\n      </List>\n    </DialogRoot>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport { Box } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Slide from '@mui/material/Slide';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useTheme } from '@mui/system';\nimport { H6 } from 'app/components/Typography';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/system';\nimport React from 'react';\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  '& form': {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'column',\n    width: 'fit-content',\n  },\n  '& .formControl': {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  '& .formControlLabel': {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <DialogRoot>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <form noValidate>\n            <FormControl className=\"formControl\">\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{ name: 'max-width', id: 'max-width' }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              className=\"formControlLabel\"\n              label=\"Full width\"\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </DialogRoot>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import AddIcon from '@mui/icons-material/Add';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Box } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { blue } from '@mui/material/colors';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport CustomizedDialogs from './CustomizedDialog';\nimport AlertDialogSlide from './DialogTransition';\nimport FormDialog from './FormDialog';\nimport FullScreenDialog from './FullScreenDialog';\nimport MaxWidthDialog from './OptimalSizeDialog';\nimport ResponsiveDialog from './ResponsiveDialog';\nimport AlertDialog from './SimpleAlerts';\nimport SimpleDialogDemo from './SimpleDialog';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppDialog = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple Dialog\">\n          <SimpleDialogDemo />\n        </SimpleCard>\n\n        <SimpleCard title=\"alert dialog\">\n          <AlertDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <AlertDialogSlide />\n        </SimpleCard>\n\n        <SimpleCard title=\"form dialog\">\n          <FormDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized dialog\">\n          <CustomizedDialogs />\n        </SimpleCard>\n\n        <SimpleCard title=\"full-screen dialog\">\n          <FullScreenDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"optimized size dialog\">\n          <MaxWidthDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"responsive dialog\">\n          <ResponsiveDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"confirmation dialog\">\n          <ConfirmationDialog />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}