{"version":3,"sources":["app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["AppButtonRoot","styled","display","margin","theme","spacing","FormGroupCheckbox","React","useState","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","error","filter","v","length","FormControl","component","className","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","value","label","FormHelperText","required","GreenCheckbox","color","green","LabelledCheckbox","checkedA","checkedB","checkedF","checkedG","row","disabled","indeterminate","icon","checkedIcon","fontSize","PlacingCheckboxLabel","setValue","labelPlacement","SimpleCheckbox","inputProps","defaultChecked","Container","breakpoints","down","marginBottom","AppCheckbox","Box","routeSegments","path","title","py"],"mappings":"gQAWMA,EAAgBC,YAAO,MAAPA,EAAc,kBAAgB,CAClDC,QAAS,OACT,iBAAkB,CAAEC,OAFc,EAAGC,MAEHC,QAAQ,QAG7B,SAASC,IACtB,MAA0BC,IAAMC,SAAS,CACvCC,OAAO,EACPC,OAAO,EACPC,SAAS,IAHX,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BH,EAAS,2BAAKD,GAAN,kBAAcG,EAAOC,EAAMC,OAAOC,aAGpCT,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAChBQ,EAA4D,IAApD,CAACV,EAAOC,EAAOC,GAASS,QAAO,SAACC,GAAD,OAAOA,KAAGC,OAEvD,OACE,eAACtB,EAAD,WACE,eAACuB,EAAA,EAAD,CAAaC,UAAU,WAAWC,UAAU,cAA5C,UACE,cAACC,EAAA,EAAD,CAAWF,UAAU,SAArB,mCACA,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUZ,QAAST,EAAOsB,SAAUjB,EAAa,SAAUkB,MAAM,UAC1EC,MAAM,eAER,cAACL,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUZ,QAASR,EAAOqB,SAAUjB,EAAa,SAAUkB,MAAM,UAC1EC,MAAM,kBAER,cAACL,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CAAUZ,QAASP,EAASoB,SAAUjB,EAAa,WAAYkB,MAAM,YAEvEC,MAAM,sBAGV,cAACC,EAAA,EAAD,4BAGF,eAACX,EAAA,EAAD,CAAaY,UAAQ,EAAChB,MAAOA,EAAOK,UAAU,WAAWC,UAAU,cAAnE,UACE,cAACC,EAAA,EAAD,CAAWF,UAAU,SAArB,sBACA,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUZ,QAAST,EAAOsB,SAAUjB,EAAa,SAAUkB,MAAM,UAC1EC,MAAM,eAER,cAACL,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUZ,QAASR,EAAOqB,SAAUjB,EAAa,SAAUkB,MAAM,UAC1EC,MAAM,kBAER,cAACL,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CAAUZ,QAASP,EAASoB,SAAUjB,EAAa,WAAYkB,MAAM,YAEvEC,MAAM,sBAIV,cAACC,EAAA,EAAD,6C,oFC7DFE,EAAgBnC,YAAO6B,IAAP7B,EAAiB,iBAAO,CAC5CoC,MAAOC,IAAM,KACb,YAAa,CACXD,MAAOC,IAAM,UAIF,SAASC,IACtB,MAA0BhC,IAAMC,SAAS,CACvCgC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,IAJZ,mBAAO/B,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BH,EAAS,2BAAKD,GAAN,kBAAcG,EAAOC,EAAMC,OAAOC,aAG5C,OACE,eAACS,EAAA,EAAD,CAAWiB,KAAG,EAAd,UACE,cAAChB,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CAAUZ,QAASN,EAAM4B,SAAUT,SAAUjB,EAAa,YAAakB,MAAM,aAE/EC,MAAM,cAER,cAACL,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEZ,QAASN,EAAM6B,SACfV,SAAUjB,EAAa,YACvBkB,MAAM,WACNK,MAAM,YAGVJ,MAAM,YAER,cAACL,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CAAUE,MAAM,aAAeC,MAAM,iBAChE,cAACL,EAAA,EAAD,CAAkBiB,UAAQ,EAAChB,QAAS,cAACC,EAAA,EAAD,CAAUE,MAAM,aAAeC,MAAM,aACzE,cAACL,EAAA,EAAD,CAAkBiB,UAAQ,EAAChB,QAAS,cAACC,EAAA,EAAD,CAAUZ,SAAO,EAACc,MAAM,aAAeC,MAAM,aACjF,cAACL,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEZ,QAASN,EAAM8B,SACfX,SAAUjB,EAAa,YACvBkB,MAAM,WACNc,eAAa,IAGjBb,MAAM,kBAER,cAACL,EAAA,EAAD,CACEC,QACE,cAACO,EAAD,CACEC,MAAM,UACNnB,QAASN,EAAM+B,SACfZ,SAAUjB,EAAa,YACvBkB,MAAM,aAGVC,MAAM,iBAER,cAACL,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUiB,KAAM,cAAC,IAAD,IAAoBC,YAAa,cAAC,IAAD,IAAchB,MAAM,aAC9EC,MAAM,gBAER,cAACL,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEiB,KAAM,cAAC,IAAD,CAA0BE,SAAS,UACzCD,YAAa,cAAC,IAAD,CAAcC,SAAS,UACpCjB,MAAM,aAGVC,MAAM,mBCvCCiB,MAxCf,WACE,MAA0B3C,IAAMC,SAAS,UAAzC,mBAAOwB,EAAP,KAAcmB,EAAd,KAMA,OACE,eAAC5B,EAAA,EAAD,CAAaC,UAAU,WAAvB,UACE,cAACE,EAAA,EAAD,CAAWF,UAAU,SAArB,4BACA,eAACG,EAAA,EAAD,CAAW,aAAW,WAAWZ,KAAK,WAAWiB,MAAOA,EAAOD,SAP9C,SAACf,GACpBmC,EAASnC,EAAMC,OAAOe,QAMmEY,KAAG,EAA1F,UACE,cAAChB,EAAA,EAAD,CACEI,MAAM,MACNC,MAAM,MACNmB,eAAe,MACfvB,QAAS,cAACC,EAAA,EAAD,CAAUO,MAAM,cAE3B,cAACT,EAAA,EAAD,CACEI,MAAM,QACNC,MAAM,QACNmB,eAAe,QACfvB,QAAS,cAACC,EAAA,EAAD,CAAUO,MAAM,cAE3B,cAACT,EAAA,EAAD,CACEI,MAAM,SACNC,MAAM,SACNmB,eAAe,SACfvB,QAAS,cAACC,EAAA,EAAD,CAAUO,MAAM,cAE3B,cAACT,EAAA,EAAD,CACEI,MAAM,MACNC,MAAM,MACNmB,eAAe,MACfvB,QAAS,cAACC,EAAA,EAAD,CAAUO,MAAM,qB,SCrCpB,SAASgB,IACtB,MAA0B9C,IAAMC,SAAS,CACvCgC,UAAU,EACVC,UAAU,EACVC,UAAU,IAHZ,mBAAO9B,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACC,GAAD,OAAU,SAACC,GAC9BH,EAAS,2BAAKD,GAAN,kBAAcG,EAAOC,EAAMC,OAAOC,aAG5C,OACE,eAAC,IAAD,WACE,cAACY,EAAA,EAAD,CACEE,MAAM,WACNd,QAASN,EAAM4B,SACfT,SAAUjB,EAAa,YACvBwC,WAAY,CAAE,aAAc,sBAE9B,cAACxB,EAAA,EAAD,CACEZ,QAASN,EAAM6B,SACfV,SAAUjB,EAAa,YACvBkB,MAAM,WACNK,MAAM,UACNiB,WAAY,CAAE,aAAc,wBAE9B,cAACxB,EAAA,EAAD,CAAUE,MAAM,WAAWsB,WAAY,CAAE,aAAc,2BACvD,cAACxB,EAAA,EAAD,CAAUe,UAAQ,EAACb,MAAM,WAAWsB,WAAY,CAAE,aAAc,uBAEhE,cAACxB,EAAA,EAAD,CACEe,UAAQ,EACR3B,SAAO,EACPc,MAAM,WACNsB,WAAY,CAAE,aAAc,+BAG9B,cAACxB,EAAA,EAAD,CACEZ,QAASN,EAAM8B,SACfX,SAAUjB,EAAa,YACvBkB,MAAM,WACNc,eAAa,EACbQ,WAAY,CAAE,aAAc,4BAG9B,cAACxB,EAAA,EAAD,CACEyB,gBAAc,EACdlB,MAAM,UACNL,MAAM,WACNsB,WAAY,CAAE,aAAc,oCC5CpC,IAAME,EAAYvD,YAAO,MAAPA,EAAc,kBAAGG,EAAH,EAAGA,MAAH,UAC9BD,OAAQ,QADsB,cAE7BC,EAAMqD,YAAYC,KAAK,MAAQ,CAAEvD,OAAQ,SAFZ,cAG9B,gBAH8B,aAI5BwD,aAAc,QACbvD,EAAMqD,YAAYC,KAAK,MAAQ,CAAEC,aAAc,UALpB,KA2CjBC,UAlCK,WAClB,OACE,eAACJ,EAAD,WACE,cAACK,EAAA,EAAD,CAAKpC,UAAU,aAAf,SACE,cAAC,IAAD,CACEqC,cAAe,CAAC,CAAE/C,KAAM,WAAYgD,KAAM,aAAe,CAAEhD,KAAM,gBAIrE,cAAC,IAAD,CAAYiD,MAAM,kBAAlB,SACE,cAACX,EAAD,MAGF,cAACQ,EAAA,EAAD,CAAKI,GAAG,SAER,cAAC,IAAD,CAAYD,MAAM,sBAAlB,SACE,cAACzB,EAAD,MAGF,cAACsB,EAAA,EAAD,CAAKI,GAAG,SAER,cAAC,IAAD,CAAYD,MAAM,2BAAlB,SACE,cAAC1D,EAAD,MAGF,cAACuD,EAAA,EAAD,CAAKI,GAAG,SAER,cAAC,IAAD,CAAYD,MAAM,0CAAlB,SACE,cAAC,EAAD","file":"static/js/29.9ad40b98.chunk.js","sourcesContent":["import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  styled,\n} from '@mui/material';\nimport React from 'react';\n\nconst AppButtonRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  '& .formControl': { margin: theme.spacing(2) },\n}));\n\nexport default function FormGroupCheckbox() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  return (\n    <AppButtonRoot>\n      <FormControl component=\"fieldset\" className=\"formControl\">\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n\n      <FormControl required error={error} component=\"fieldset\" className=\"formControl\">\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </AppButtonRoot>\n  );\n}\n","import CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport Favorite from '@mui/icons-material/Favorite';\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport { styled } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport { green } from '@mui/material/colors';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport React from 'react';\n\nconst GreenCheckbox = styled(Checkbox)(() => ({\n  color: green[400],\n  '&$checked': {\n    color: green[600],\n  },\n}));\n\nexport default function LabelledCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox checked={state.checkedA} onChange={handleChange('checkedA')} value=\"checkedA\" />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange('checkedB')}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\n      <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n      <FormControlLabel disabled control={<Checkbox checked value=\"checkedE\" />} label=\"Disabled\" />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange('checkedF')}\n            value=\"checkedF\"\n            indeterminate\n          />\n        }\n        label=\"Indeterminate\"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            color=\"default\"\n            checked={state.checkedG}\n            onChange={handleChange('checkedG')}\n            value=\"checkedG\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />}\n        label=\"Custom icon\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            value=\"checkedI\"\n          />\n        }\n        label=\"Custom size\"\n      />\n    </FormGroup>\n  );\n}\n","import Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport React from 'react';\n\nfunction PlacingCheckboxLabel() {\n  const [value, setValue] = React.useState('female');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup aria-label=\"position\" name=\"position\" value={value} onChange={handleChange} row>\n        <FormControlLabel\n          value=\"top\"\n          label=\"Top\"\n          labelPlacement=\"top\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"start\"\n          label=\"Start\"\n          labelPlacement=\"start\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n          control={<Checkbox color=\"primary\" />}\n        />\n        <FormControlLabel\n          value=\"end\"\n          label=\"End\"\n          labelPlacement=\"end\"\n          control={<Checkbox color=\"primary\" />}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default PlacingCheckboxLabel;\n","import { Box, Checkbox } from '@mui/material';\nimport React from 'react';\n\nexport default function SimpleCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n  });\n\n  const handleChange = (name) => (event) => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <Box>\n      <Checkbox\n        value=\"checkedA\"\n        checked={state.checkedA}\n        onChange={handleChange('checkedA')}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange('checkedB')}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Checkbox value=\"checkedC\" inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n      <Checkbox disabled value=\"checkedD\" inputProps={{ 'aria-label': 'disabled checkbox' }} />\n\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{ 'aria-label': 'disabled checked checkbox' }}\n      />\n\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange('checkedF')}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n      />\n\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n    </Box>\n  );\n}\n","import { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport FormGroupCheckbox from './FormGroupCheckbox';\nimport LabelledCheckbox from './LabelledCheckbox';\nimport PlacingCheckboxLabel from './PlacingCheckboxLabel';\nimport SimpleCheckbox from './SimpleCheckbox';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppCheckbox = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb\n          routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Chckbox' }]}\n        />\n      </Box>\n\n      <SimpleCard title=\"simple checkbox\">\n        <SimpleCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Label\">\n        <LabelledCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Form Group\">\n        <FormGroupCheckbox />\n      </SimpleCard>\n\n      <Box py=\"12px\" />\n\n      <SimpleCard title=\"Checkbox with Different Label Placement\">\n        <PlacingCheckboxLabel />\n      </SimpleCard>\n    </Container>\n  );\n};\n\nexport default AppCheckbox;\n"],"sourceRoot":""}