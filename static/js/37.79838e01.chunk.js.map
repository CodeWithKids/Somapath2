{"version":3,"sources":["app/views/sessions/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","useState","loading","setLoading","login","useAuth","handleFormSubmit","values","className","container","item","sm","xs","p","src","width","alt","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","checked","to","style","color","palette","primary","main","my","marginLeft"],"mappings":"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","file":"static/js/37.79838e01.chunk.js","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { Paragraph } from 'app/components/Typography';\nimport useAuth from 'app/hooks/useAuth';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nconst ContentBox = styled(Box)(() => ({\n  height: '100%',\n  padding: '32px',\n  position: 'relative',\n  background: 'rgba(0, 0, 0, 0.01)',\n}));\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100% !important',\n  '& .card': {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: '1rem',\n    display: 'flex',\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: 'jason@ui-lib.com',\n  password: 'dummyPass',\n  remember: true,\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, 'Password must be 6 character length')\n    .required('Password is required!'),\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\n});\n\nconst JwtLogin = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const { login } = useAuth();\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await login(values.email, values.password);\n      navigate('/');\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <JustifyBox p={4} height=\"100%\">\n              <img src=\"/assets/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\n            </JustifyBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 1.5 }}\n                    />\n\n                    <FlexBox justifyContent=\"space-between\">\n                      <FlexBox gap={1}>\n                        <Checkbox\n                          size=\"small\"\n                          name=\"remember\"\n                          onChange={handleChange}\n                          checked={values.remember}\n                          sx={{ padding: 0 }}\n                        />\n\n                        <Paragraph>Remember Me</Paragraph>\n                      </FlexBox>\n\n                      <NavLink\n                        to=\"/session/forgot-password\"\n                        style={{ color: theme.palette.primary.main }}\n                      >\n                        Forgot password?\n                      </NavLink>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}\n                    >\n                      Login\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Don't have an account?\n                      <NavLink\n                        to=\"/session/signup\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n                      >\n                        Register\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRoot>\n  );\n};\n\nexport default JwtLogin;\n"],"sourceRoot":""}